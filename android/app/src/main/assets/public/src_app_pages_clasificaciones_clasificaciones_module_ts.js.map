{"version":3,"file":"src_app_pages_clasificaciones_clasificaciones_module_ts.js","mappings":"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","sources":["./src/app/pages/clasificaciones/clasificaciones-routing.module.ts","./src/app/pages/clasificaciones/clasificaciones.module.ts","./src/app/pages/clasificaciones/clasificaciones.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DirectoriosPage } from '../directorios/directorios.page';\n\nimport { ClasificacionesPage } from './clasificaciones.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ClasificacionesPage,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ClasificacionesPageRoutingModule { }\n","import { IonicModule } from '@ionic/angular';\nimport { Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from 'app/components/components.module';\nimport { ClasificacionesPage } from './clasificaciones.page';\nimport { ClasificacionesPageRoutingModule } from './clasificaciones-routing.module';\nimport { FirebaseService } from 'app/services/firebase.service';\n// import { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\n\nconst clasificacionesRoutes: Routes = [\n  {\n    path: '',\n    component: ClasificacionesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ClasificacionesPageRoutingModule,\n    ComponentsModule,\n  ],\n  declarations: [ClasificacionesPage],\n  providers: [\n    FirebaseService,\n    // InAppBrowser\n  ]\n})\nexport class ClasificacionesPageModule { }\n","import { Component, OnInit, OnDestroy, HostBinding, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ModalController, IonRouterOutlet } from '@ionic/angular';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { Observable, ReplaySubject, Subscription, merge } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\nimport { ClasificacionesModel } from 'app/models/clasificaciones.model';\n// import { FirebaseCreateUserModal } from '../user/create/firebase-create-user.modal';\nimport { DataStore, ShellModel } from 'app/shell/data-store';\nimport { FirebaseService } from 'app/services/firebase.service';\n\nimport { CarritoService } from 'app/services/carrito.service';\nimport { CarritoPage } from 'app/pages/carrito/carrito.page';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { BuscarPage } from 'app/pages/buscar/buscar.page';\n\n@Component({\n  selector: 'app-clasificaciones',\n  templateUrl: './clasificaciones.page.html',\n  styleUrls: [\n    './styles/clasificaciones.page.scss',\n    './styles/clasificaciones.shell.scss',\n    './styles/clasificaciones.responsive.scss'\n  ]\n})\nexport class ClasificacionesPage implements OnInit, OnDestroy {\n  rangeForm: FormGroup;\n  searchQuery: string;\n  showAgeFilter = false;\n  categoriaId: string;\n  categoria: string;\n\n  searchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\n  searchFiltersObservable: Observable<any> = this.searchSubject.asObservable();\n\n  clasificacionesDataStore: DataStore<Array<ClasificacionesModel>>;\n  stateSubscription: Subscription;\n\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\n  items: Array<ClasificacionesModel> & ShellModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.items && this.items.isShell) ? true : false;\n  }\n\n  cart = [];\n  products = [];\n  cartItemCount: BehaviorSubject<number>;\n\n  @ViewChild('cart', { static: false, read: ElementRef }) fab: ElementRef;\n\n  constructor(\n    public router: Router,\n    public firebaseService: FirebaseService,\n    public modalController: ModalController,\n    private route: ActivatedRoute,\n    private routerOutlet: IonRouterOutlet,\n    private cartService: CarritoService,\n    private modalCtrl: ModalController\n  ) { }\n\n  ngOnDestroy(): void {\n    this.stateSubscription.unsubscribe();\n  }\n\n  async ngOnInit() {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.categoriaId = params.categoriaId;\n        this.categoria = params.categoria;\n      }\n    );\n\n    var sucursal = await this.firebaseService.getSucursalAsync('slc');\n    if (sucursal) {\n      localStorage.setItem(\"sucursal\", JSON.stringify(sucursal));\n    }\n\n    this.products = this.cartService.getProducts();\n    this.cart = this.cartService.getCart();\n    this.cartItemCount = this.cartService.getCartItemCount();\n\n    this.searchQuery = '';\n\n    this.rangeForm = new FormGroup({\n      dual: new FormControl({ lower: 1, upper: 100 })\n    });\n\n    this.route.data.subscribe(\n      (resolvedRouteData) => {\n\n        const dataSource: Observable<Array<ClasificacionesModel>> = this.firebaseService.getClasificacionesDataSource('directorio');\n\n        const dataStore: DataStore<Array<ClasificacionesModel>> = this.firebaseService.getClasificacionesStore(dataSource);\n\n        this.clasificacionesDataStore = dataStore;\n\n        // We need to avoid having multiple firebase subscriptions open at the same time to avoid memory leaks\n        // By using a switchMap to cancel previous subscription each time a new one arrives,\n        // we ensure having just one subscription (the latest)\n        const updateSearchObservable = this.searchFiltersObservable.pipe(\n          switchMap((filters) => {\n            const filteredDataSource = this.firebaseService.searchClasificaciones(\n              filters.lower,\n              filters.upper\n            );\n            // Send a shell until we have filtered data from Firebase\n            const searchingShellModel = [\n              new ClasificacionesModel(),\n              new ClasificacionesModel()\n            ];\n            // Wait on purpose some time to ensure the shell animation gets shown while loading filtered data\n            const searchingDelay = 400;\n\n            const dataSourceWithShellObservable = DataStore.AppendShell(filteredDataSource, searchingShellModel, searchingDelay);\n\n            return dataSourceWithShellObservable.pipe(\n              map(filteredItems => {\n                // Just filter items by name if there is a search query and they are not shell values\n                if (filters.query !== '' && !filteredItems.isShell) {\n                  const queryFilteredItems = filteredItems.filter(item =>\n                    item.clasificacion.toLowerCase().includes(filters.query.toLowerCase()\n                    ));\n                  // While filtering we strip out the isShell property, add it again\n                  return Object.assign(queryFilteredItems, { isShell: filteredItems.isShell });\n                } else {\n                  return filteredItems;\n                }\n              })\n            );\n          })\n        );\n\n        // Keep track of the subscription to unsubscribe onDestroy\n        // Merge filteredData with the original dataStore state\n        this.stateSubscription = merge(\n          this.clasificacionesDataStore.state,\n          updateSearchObservable\n        ).subscribe(\n          (state) => {\n            this.items = state;\n            // console.log(state);\n          },\n          (error) => console.log(error),\n          () => console.log('stateSubscription completed')\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  searchList() {\n    this.searchSubject.next({\n      lower: this.rangeForm.controls.dual.value.lower,\n      upper: this.rangeForm.controls.dual.value.upper,\n      query: this.searchQuery\n    });\n  }\n\n\n  addToCart(product) {\n    this.cartService.addProduct(product);\n  }\n\n\n  async openCart() {\n\n    let modal = await this.modalCtrl.create({\n      component: CarritoPage,\n      cssClass: 'cart-modal'\n    });\n    modal.onWillDismiss().then(() => {\n      this.fab.nativeElement.classList.remove('animated', 'bounceOutLeft')\n    });\n    modal.present();\n  }\n\n  async openSearch(titulo: string, categoriaId: string, clasificacionId: string) {\n\n    let modal = await this.modalCtrl.create({\n      component: BuscarPage,\n      cssClass: 'cart-modal',\n      componentProps: {\n        'titulo': titulo,\n        'categoriaId': categoriaId,\n        'clasificacionId': clasificacionId\n      }\n    });\n    modal.onWillDismiss().then(() => {\n      this.fab.nativeElement.classList.remove('animated', 'bounceOutLeft')\n    });\n    modal.present();\n  }\n\n  closeModal() {\n    this.modalCtrl.dismiss();\n  }\n\n  // openClasificacion(clasificacionId: string, clasificacion: string) {\n  //   this.router.navigate(['/directorios/', clasificacionId, clasificacion], { replaceUrl: true });\n  // }\n\n}\n"],"names":["Component","HostBinding","ViewChild","ElementRef","FormGroup","FormControl","ModalController","IonRouterOutlet","ActivatedRoute","Router","ReplaySubject","merge","switchMap","map","ClasificacionesModel","DataStore","FirebaseService","CarritoService","CarritoPage","BuscarPage","ClasificacionesPage","constructor","router","firebaseService","modalController","route","routerOutlet","cartService","modalCtrl","searchSubject","asObservable","isShell","items","ngOnDestroy","stateSubscription","unsubscribe","ngOnInit","params","subscribe","categoriaId","categoria","sucursal","getSucursalAsync","localStorage","setItem","JSON","stringify","products","getProducts","cart","getCart","cartItemCount","getCartItemCount","searchQuery","rangeForm","dual","lower","upper","data","resolvedRouteData","dataSource","getClasificacionesDataSource","dataStore","getClasificacionesStore","clasificacionesDataStore","updateSearchObservable","searchFiltersObservable","pipe","filters","filteredDataSource","searchClasificaciones","searchingShellModel","searchingDelay","dataSourceWithShellObservable","AppendShell","filteredItems","query","queryFilteredItems","filter","item","clasificacion","toLowerCase","includes","Object","assign","state","error","console","log","searchList","next","controls","value","addToCart","product","addProduct","openCart","modal","create","component","cssClass","onWillDismiss","then","fab","nativeElement","classList","remove","present","openSearch","titulo","clasificacionId","componentProps","closeModal","dismiss","args","static","read","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}