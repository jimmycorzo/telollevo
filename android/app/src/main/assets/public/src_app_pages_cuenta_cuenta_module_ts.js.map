{"version":3,"file":"src_app_pages_cuenta_cuenta_module_ts.js","mappings":"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","sources":["./src/app/models/country-phone.model.ts","./src/app/pages/cuenta/cuenta-routing.module.ts","./src/app/pages/cuenta/cuenta.module.ts","./src/app/pages/cuenta/cuenta.page.ts"],"sourcesContent":["// import libphonenumber from 'google-libphonenumber';\n\nexport class CountryPhone {\n  iso: string;\n  name: string;\n  code: string;\n  sample_phone: string;\n\n  constructor(iso: string, name: string) {\n    this.iso = iso;\n    this.name = name;\n\n    // const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance(),\n    //     PNF = libphonenumber.PhoneNumberFormat,\n    //     PNT = libphonenumber.PhoneNumberType,\n    //     country_example_number = phoneUtil.getExampleNumberForType(this.iso, PNT.MOBILE),\n    //     // We need to define what kind of country phone number type we are going to use as a mask.\n    //     // You can choose between many types including:\n    //     //    - FIXED_LINE\n    //     //    - MOBILE\n    //     //    - For more types please refer to google libphonenumber repo\n    //     // (https://bit.ly/2QZb6J9)\n    //     example_number_formatted = phoneUtil.format(country_example_number, PNF.NATIONAL);\n    //     // We need to define how are we going to format the phone number\n    //     // You can choose between many formats including:\n    //     //    - NATIONAL\n    //     //    - INTERNATIONAL\n    //     //    - E164\n    //     //    - RFC3966\n\n    // this.sample_phone = example_number_formatted;\n    // this.code = '+' + country_example_number.getCountryCode();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CuentaPage } from './cuenta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CuentaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CuentaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CuentaPageRoutingModule } from './cuenta-routing.module';\n\nimport { CuentaPage } from './cuenta.page';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CuentaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    CuentaPageRoutingModule,\n\n  ],\n  declarations: [CuentaPage],\nproviders: [\n  ]\n})\nexport class CuentaPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { CountryPhone } from 'app/models/country-phone.model';\nimport { CuentaModel } from './cuenta.model';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from 'app/services/firebase.service';\nimport { TiposModel } from 'app/models/tipos.model';\nimport { AuthenticationService } from 'app/services/authentication.service';\nimport { UtilService } from 'app/services/util.service';\n\n@Component({\n  selector: 'app-cuenta',\n  templateUrl: './cuenta.page.html',\n  styleUrls: ['./cuenta.page.scss'],\n})\nexport class CuentaPage implements OnInit {\n  validationsForm: FormGroup;\n  matching_passwords_group: FormGroup;\n  country_phone_group: FormGroup;\n  countries: Array<CountryPhone>;\n\n  validations = {\n    'tipo': [\n      { type: 'required', message: 'Por favor seleccione el tipo de documento.' }\n    ],\n    'nombre': [\n      { type: 'required', message: 'Por favor digite su nombre o razón social.' }\n    ],\n    'numero': [\n      { type: 'required', message: 'Por favor digite el número de identificación.' }\n    ],\n    'direccion': [\n      { type: 'required', message: 'Por favor digite la dirección de facturación.' }\n    ],\n    'correo': [\n      { type: 'required', message: 'Por favor digite el correo electrónico de facturación.' },\n      { type: 'pattern', message: 'Coloque un correo válido.' }\n    ],\n    'telefono': [\n      { type: 'required', message: 'Por favor digite el número de teléfono de facturación.' },\n      { type: 'invalidCountryPhone', message: 'El teléfono es incorrecto para el país seleccionado.' }\n    ],\n    'terms': [\n      { type: 'pattern', message: 'Debe aceptar los términos y condiciones.' }\n    ]\n  };\n  tipos: TiposModel[];\n  datos: CuentaModel;\n\n  constructor(\n    public firebaseService: FirebaseService,\n    private router: Router,\n    private authService: AuthenticationService,\n    public util: UtilService,\n  ) { }\n\n  ngOnInit(): void {\n    this.validationsForm = new FormGroup({\n      'id': new FormControl('', Validators.nullValidator),\n      'uid': new FormControl('', Validators.nullValidator),\n      'tipo': new FormControl('', Validators.required),\n      'nombre': new FormControl('', Validators.required),\n      'numero': new FormControl('', Validators.required),\n      'direccion': new FormControl('', Validators.required),\n      'pais': new FormControl('', Validators.required),\n      'telefono': new FormControl('', Validators.required),\n      'terms': new FormControl(true, Validators.pattern('true')),\n      'correo': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n    });\n\n    this.firebaseService.getTipos()\n      .subscribe(result => {\n        this.tipos = result as unknown as TiposModel[];\n      });\n\n    this.countries = [\n      new CountryPhone('co', 'Colombia'),\n    ];\n\n    this.firebaseService.getDato().subscribe(result => {\n      this.datos = result[0];\n      if (this.datos) {\n        this.validationsForm.controls[\"id\"].setValue(this.datos.id);\n        this.validationsForm.controls[\"uid\"].setValue(this.datos.uid);\n        this.validationsForm.controls[\"tipo\"].setValue(this.datos.tipo);\n        this.validationsForm.controls[\"nombre\"].setValue(this.datos.nombre);\n        this.validationsForm.controls[\"numero\"].setValue(this.datos.numero);\n        this.validationsForm.controls[\"direccion\"].setValue(this.datos.direccion);\n        this.validationsForm.controls[\"correo\"].setValue(this.datos.correo);\n        this.validationsForm.controls[\"telefono\"].setValue(this.datos.telefono);\n        this.validationsForm.controls[\"pais\"].setValue(this.datos.pais);\n      }\n    });\n\n  }\n\n  onSubmit(values) {\n    this.firebaseService.createDato(values);\n    this.util.navigate('tabs/directorios', false);\n  }\n\n  signOut() {\n    this.authService.signout();\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}